name: Docker-Construct-Frontend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      # Configure Git for tagging
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create Git Tag
        id: tag
        run: |
          git tag -a "v${{ github.run_number }}" -m "Release v${{ github.run_number }}"
          git push origin "v${{ github.run_number }}"
          echo "TAG=v${{ github.run_number }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-platform Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
          --tag your-dockerhub-username/gilded-sentinel:${{ env.TAG }} \
          --push .

  create-release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker Artifact
        uses: actions/download-artifact@v4
        with:
          name: gilded-sentinel-docker-image-v${{ github.run_number }}
          path: ./docker-artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          files: ./docker-artifacts/gilded-sentinel-v${{ github.run_number }}.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
